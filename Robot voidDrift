void driveStraightUntil(double targetDistance) {
    double kP = 0.1; // Proportional gain
    double minMotorSpeed = 20.0; // Minimum motor speed
    double maxMotorSpeed = 50.0; // Maximum motor speed
    double positiveDeadZone = 0.1; // Positive dead zone around the target distance
    double negativeDeadZone = -0.1; // Negative dead zone around the target distance
    double initialHeading = DrivetrainInertial.heading(vex::rotationUnits::deg); // Initial heading
    
    // Drive forward
    Drivetrain.driveFor(targetDistance, vex::distanceUnits::in, false);
    
    while (true) {
        // Calculate current heading
        double currentHeading = DrivetrainInertial.heading(vex::rotationUnits::deg);
        
        // Calculate change in heading
        double headingChange = currentHeading - initialHeading;
        
        // Estimate distance traveled based on heading change
        double distanceTraveled = (headingChange / 360.0) * (3.14 * wheelDiameter); // Assuming wheelDiameter is defined
        
        // Calculate distance error
        double distanceError = targetDistance - distanceTraveled;
        
        // Check if within the dead zone
        if (distanceError > negativeDeadZone && distanceError < positiveDeadZone) {
            // Stop the robot and break out of the loop
            break;
        }
        
        // Adjust motor speed based on distance error
        double motorSpeed = kP * distanceError;
        if (motorSpeed < minMotorSpeed) {
            motorSpeed = minMotorSpeed;
        } else if (motorSpeed > maxMotorSpeed) {
            motorSpeed = maxMotorSpeed;
        }
        
        // Set motor speeds
        LeftDriveSmart.setVelocity(motorSpeed, vex::velocityUnits::pct);
        RightDriveSmart.setVelocity(motorSpeed, vex::velocityUnits::pct);
        
        // Wait for a short duration before the next iteration
        wait(10, msec);
    }
    
    // After breaking out of the loop, stop the motors and release control of the drivetrain
    Drivetrain.stop();
}