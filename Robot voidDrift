void driveStraightUntil(double targetDistance) {
    double kP = 0.1; // Proportional gain
    double minMotorSpeed = 20.0; // Minimum motor speed
    double maxMotorSpeed = 50.0; // Maximum motor speed
    double distanceError;
    
    Drivetrain.driveFor(targetDistance, inches, false); // Drive forward for target distance
    
    while (true) {
        // Calculate distance error
        distanceError = targetDistance - Drivetrain.distance(inches);
        
        // Adjust motor speed based on distance error
        double motorSpeed = kP * distanceError;
        if (motorSpeed < minMotorSpeed) {
            motorSpeed = minMotorSpeed;
        } else if (motorSpeed > maxMotorSpeed) {
            motorSpeed = maxMotorSpeed;
        }
        
        // Set motor speeds
        LeftDriveSmart.setVelocity(motorSpeed, percent);
        RightDriveSmart.setVelocity(motorSpeed, percent);
        
        // Move the robot
        LeftDriveSmart.spin(forward);
        RightDriveSmart.spin(forward);
        
        // Check if the target distance is reached
        if (fabs(distanceError) < 0.1) {
            // Stop the robot and break out of the loop
            Drivetrain.stop();
            break;
        }
        
        // Wait for a short duration before the next iteration
        wait(10, msec);
    }
}